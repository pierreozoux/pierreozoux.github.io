<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: security | Pierre-O's Blog]]></title>
  <link href="http://pierreozoux.github.io/blog/categories/security/atom.xml" rel="self"/>
  <link href="http://pierreozoux.github.io/"/>
  <updated>2015-03-12T21:02:40+00:00</updated>
  <id>http://pierreozoux.github.io/</id>
  <author>
    <name><![CDATA[Pierre Ozoux]]></name>
    <email><![CDATA[pierre@ozoux.net]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Defense for let's encrypt]]></title>
    <link href="http://pierreozoux.github.io/blog/2014/11/20/Defense-for-lets-encrypt/"/>
    <updated>2014-11-20T11:01:14+00:00</updated>
    <id>http://pierreozoux.github.io/blog/2014/11/20/Defense-for-lets-encrypt</id>
    <content type="html"><![CDATA[<p>I just read <a href="https://www.linkedin.com/pulse/article/20141120073425-26662417-why-i-won-t-be-using-let-s-encrypt-and-recommend-other-not-to-also">an article</a> from <a href="https://twitter.com/alexanderhanff/">alexanderhanff</a> against <a href="https://letsencrypt.org/">Let&rsquo;s Encrypt</a>.</p>

<p>I&rsquo;m sorry, but I can&rsquo;t let it go.</p>

<!-- more -->


<p>If you don&rsquo;t know yet <a href="https://letsencrypt.org/">Let&rsquo;s Encrypt</a> project, I recommend going to their page and get to know! It is really good idea, but apparently some people disagree.</p>

<h2>Commenting the article itself</h2>

<p>&ldquo;[this new CA] will become a target&rdquo;</p>

<p>I&rsquo;m pretty sure NSA will just go to other authorities for this kind of jobs. If I am NSA, I would feel ashame to go to EFF ask to fake a certificate to spy on people. They are already doind it, and they&rsquo;ll just continue.</p>

<p>&ldquo;why on earth would a terrorist pay Verisign for an SSL certificate, leaving a paper trail, if they can obtain an anonymous certificate for free from Let&rsquo;s Encrypt?&rdquo;</p>

<p>Oh well, I think you don&rsquo;t really get the project. How could/would you obtain a certificate for a domain you don&rsquo;t own? Your certificate is linked to a domain name, and to buy a domain name, you don&rsquo;t have much choice than paying by credit card, and giving your ID.</p>

<p>And why are you speaking about terrorist? I really don&rsquo;t get your point.</p>

<p>&ldquo;it removes all confidence in TLS certificates as far as I am concerned and I will absolutely not be using the service&rdquo;</p>

<p>Oh well, it is the same as right now. Do you trust verisign? So why not trusting let&rsquo;s encrypt (at the same level at least)? TLS certificate is broken. We know it! Nothing new with what you are saying. So I don&rsquo;t see the point of ranting about Let&rsquo;s Encrypt when you have nothing better to propose!</p>

<h2>Conclusion</h2>

<p>I think you can&rsquo;t speak seriously in this article. I think you are just a troll, and I just lost 20 minutes of my life answering. But I really believe it&rsquo;s important to discuss about these issues. Maybe there is something I didn&rsquo;t understand, please let me know!</p>

<h2>To go further</h2>

<p>About ssl certificate authority, I recommend this talk if you didn&rsquo;t already see it.</p>

<p><a href="http://www.youtube.com/watch?v=8N4sb-SEpcg">http://www.youtube.com/watch?v=8N4sb-SEpcg</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to build your own CA?]]></title>
    <link href="http://pierreozoux.github.io/blog/2013/07/10/how-to-build-your-own-ca/"/>
    <updated>2013-07-10T14:26:00+01:00</updated>
    <id>http://pierreozoux.github.io/blog/2013/07/10/how-to-build-your-own-ca</id>
    <content type="html"><![CDATA[<p>Every time you selfsign a certificate, one of them is dying!</p>

<p><img class="<a" src="href="https://placekitten.com/890/280">https://placekitten.com/890/280</a>"></p>

<!-- more -->


<p>You like them, right? So create a rootCA, install it and sign your cert with!</p>

<h1>Create the rootCA</h1>

<p>``` bash Create the rootCA</p>

<h1>create private root key</h1>

<p>openssl genrsa -out rootCA.key 4096</p>

<h1>sign it</h1>

<p>openssl req -x509 -new -nodes -key rootCA.key -days 1024 -out rootCA.pem
```</p>

<h1>Install the rootCA on the clients</h1>

<p>Make it available to your clients, download and install it.</p>

<p>```bash Make it available
cp rootCA.pem /var/www</p>

<h1>&mdash; on your client</h1>

<p>wget rootCA.pem # and install
```</p>

<h1>Sign your certificates</h1>

<p>And now, for every device that need to be signed (like your intranet website!)</p>

<p>``` bash Create a certificate</p>

<h1>&mdash; on your device</h1>

<h1>create the device private key</h1>

<p>openssl genrsa -out device.key 4096</p>

<h1>create the certificate signing request</h1>

<h1>common-name is the most important field, this is what your browser will &ldquo;certify&rdquo;</h1>

<h1>if you website is www.example.com, then put &ldquo;www.example.com&rdquo;</h1>

<p>openssl req -new -key device.key -out device.csr</p>

<h1>&mdash; on your server with your rootCA</h1>

<p>openssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 500
```</p>

<p>That&rsquo;s it! Everytime you visit one of your website, you&rsquo;ll never see again this warning!
<img class="center" src="/images/cat_crying.jpg" title="&lsquo;cat_crying&rsquo;" >
Remember, every time you see this, a cat is suffering somewhere in the world, so contact the admin and explain that you love animals!</p>

<p>The quick and dirty tuto is over, if you want to make it better, read the following sources.</p>

<p><a href="http://www.davidpashley.com/articles/becoming-a-x-509-certificate-authority/">source 1</a>
<a href="http://datacenteroverlords.com/2012/03/01/creating-your-own-ssl-certificate-authority/">source 2</a></p>
]]></content>
  </entry>
  
</feed>
