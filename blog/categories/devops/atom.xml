<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: DevOps | Pierre-O's Blog]]></title>
  <link href="http://pierreozoux.github.io/blog/categories/devops/atom.xml" rel="self"/>
  <link href="http://pierreozoux.github.io/"/>
  <updated>2014-02-19T21:19:40+00:00</updated>
  <id>http://pierreozoux.github.io/</id>
  <author>
    <name><![CDATA[Pierre Ozoux]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Contribution to Packer]]></title>
    <link href="http://pierreozoux.github.io/blog/2013/09/06/contribution-to-packer/"/>
    <updated>2013-09-06T11:02:00+01:00</updated>
    <id>http://pierreozoux.github.io/blog/2013/09/06/contribution-to-packer</id>
    <content type="html"><![CDATA[<p>I wanted to introduce you my attempt to create a shared repository for Packer Templates. Please, feel free to comment!</p>

<!-- more -->


<p>Here it is on GitHub : <a href="https://github.com/pierreozoux/packer-warehouse">Packer-warehouse</a></p>

<p>I really would like to hear you on how you would use it, do you think it&rsquo;s convenient.. What is missing? Thanks for your help! And if you like it, spread the word!</p>

<p>And a little bonus <a href="/presentations/packer.html">the presentation</a> I gave yesterday about Packer at <a href="http://www.meetup.com/require-lx/">require(&lsquo;lx&rsquo;)</a>!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My knife was slow, so I sharped it!]]></title>
    <link href="http://pierreozoux.github.io/blog/2013/08/01/my-knife-was-slow/"/>
    <updated>2013-08-01T17:39:00+01:00</updated>
    <id>http://pierreozoux.github.io/blog/2013/08/01/my-knife-was-slow</id>
    <content type="html"><![CDATA[<p>Today, I finally decided to take care of my knife.. <code>knife help</code> was taking 30seconds..</p>

<!-- more -->


<p>I use zsh, with the <a href="https://gist.github.com/agnoster/3712874">beautiful agnoster style</a>! Here is my <a href="https://github.com/pierreozoux/dotfiles/blob/master/zshrc">zsh file</a>.</p>

<h2>This is how I improved the speed of knife</h2>

<p>After reading <a href="http://lists.opscode.com/sympa/arc/chef/2011-05/msg00020.html">that thread</a>, I decided to give it a try :
<code>bash 1. Clean your knife plugin
gem list | grep knife-
gem uninstall knife-unused_plugin
</code></p>

<p>```bash 2. Clean your gem env</p>

<h1>At your own risk, I add to reinstall some gem, but it was a lot faster afterward!</h1>

<p>gem clean
```
\o/, it&rsquo;s a lot better (3s), but still not satisfied&hellip; If you have some hints?
On top of that, my terminal was taking some seconds to load.. Annoyed&hellip;</p>

<h2>Make faster the terminal loading</h2>

<p>rbenv was taking a bit of time, I tried <a href="http://cantina.co/2013/01/25/speeding-up-your-console-when-using-rbenv/">this</a>
```bash 3. change the rbenv way of loading</p>

<h1>in zsh config file</h1>

<p>eval &ldquo;$(rbenv init &ndash; &mdash;no-rehash)&rdquo;
```</p>

<p>I still had this anoying message &ldquo;you have new mails&rdquo;, actually, I noticed, that I had an used crontab throwing errors there. And a mail per day since some month&hellip;
```bash 4. clean mails
cat /dev/null > /var/mail/pierreozoux</p>

<h1>remove the unused crontab</h1>

<p>crontab -e
```</p>

<p>Great, my terminal is loading really fast again, I will be able to relax now :)</p>

<p>As always, feel free to comment/insult/troll!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why open source is great... How to make ey-local working with mysql and unicorn]]></title>
    <link href="http://pierreozoux.github.io/blog/2013/07/09/why-open-source-is-great-dot-dot-dot-how-to-make-ey-local-working-with-mysql-and-unicorn/"/>
    <updated>2013-07-09T15:25:00+01:00</updated>
    <id>http://pierreozoux.github.io/blog/2013/07/09/why-open-source-is-great-dot-dot-dot-how-to-make-ey-local-working-with-mysql-and-unicorn</id>
    <content type="html"><![CDATA[<p>When Engine Yard released <code>ey-local</code>, I was amazed as it was promising to facilitate my work. But it was a bit (s/bit/lot/) more difficult than <code>ey-local up</code></p>

<p>I&rsquo;ll try to explain quickly how I went thou the obstacles.</p>

<!-- more -->


<h2>Vagrant</h2>

<p>I already explained <a href="/blog/2013/07/09/how-to-isolate-vagrant-env/">How to isolate vagrant env</a>, and it was indeed because <code>ey-local</code> is using the old vagrant.</p>

<h2>The right workflow</h2>

<p>The code of <code>ey-local</code> is open source but not in a git repo, so I had to find my way, to make a sustainable workflow.</p>

<h3>Patch the recipes</h3>

<p>On the way, I found it would be great to modify as little as possible the current workflow, so I decided to use the <code>patch</code> scheme that was already setup in the gem for the recipes.</p>

<p>The 1st issue was that, it was not working out of the box, so I wrote a <a href="https://github.com/pierreozoux/patches_ey-local/blob/master/patches/required.patch">first patch</a> that make the gem behaving correctly regarding the basics.</p>

<h3>Give back to the community</h3>

<p>Looking at the EngineYard support, I saw a great demand for certain features, that I wanted also. So I thought it would be great to give back to the community.</p>

<p>It is how I decided to go thou the creation of this <a href="https://github.com/pierreozoux/patches_ey-local">github repo</a>. So this is a place for us to share our patches for <code>ey-local</code>!</p>

<p>Hopefully, EngineYard will reuse this material for the next releases.</p>

<h2>Hacky? Hacky!</h2>

<p>Yes it is unfortunately really hacky, and the next step for <code>ey-local</code>, would be to modify it so well, that we have a replacement for <code>ey</code> command.</p>

<p>It should behave exactly the same, and maybe add a configuration file for the configuration we normally do online!</p>

<h2>That&rsquo;s Why open source is great&hellip;</h2>

<p>But it would be greater with a git repo :)</p>

<p>As always, feel free to comment/insult/troll!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to isolate vagrant env]]></title>
    <link href="http://pierreozoux.github.io/blog/2013/07/09/how-to-isolate-vagrant-env/"/>
    <updated>2013-07-09T15:06:00+01:00</updated>
    <id>http://pierreozoux.github.io/blog/2013/07/09/how-to-isolate-vagrant-env</id>
    <content type="html"><![CDATA[<p>As you may have noticed, vagrant changed version. Of course, I downloaded the last version. The issue is that, there is a <code>.vagrant.d</code> in your home that help to configure it, and different version of vagrant use different configurations.</p>

<p>I wanted a totally isolated environment. I&rsquo;m now using a <code>Runmefile</code> in my environment to change the pointer to the <code>.vagrant.d</code> folder.</p>

<!-- more -->


<p>Here is how I did it :</p>

<p>``` bash Add a hook in your .zshrc <a href="https://github.com/pierreozoux/dotfiles/blob/master/zshrc#L76">https://github.com/pierreozoux/dotfiles/blob/master/zshrc#L76</a> my .zshrc
_within-runme-project() {
  local check_dir=$PWD
  if [ $check_dir != &ldquo;/&rdquo; ]; then</p>

<pre><code>[ -f "$check_dir/Runmefile" ] &amp;&amp; return
</code></pre>

<p>  fi
  false
}</p>

<p>function chpwd() {
  if _within-runme-project; then</p>

<pre><code>source ./Runmefile
</code></pre>

<p>  fi
}
```</p>

<p>And Add a <code>Runmefile</code> in your project :
<div><script src='https://gist.github.com/5798032.js?file=Runmefile'></script>
<noscript><pre><code>#!/bin/bash

tmp_home=/tmp/home_$(basename $PWD)

if [ -d $tmp_home ]; then
  rm -rf $tmp_home
fi

mkdir $tmp_home

for f in `ls -a $HOME`
do
  if [ $f != &quot;.&quot; ] &amp;&amp; [ $f != &quot;..&quot; ]; then
    ln -s $HOME/$f $tmp_home/$f
  fi
done

rm $tmp_home/.vagrant.d

if [ -d ./.vagrant.d ]; then 
  ln -s $PWD/.vagrant.d $tmp_home/.vagrant.d
fi

export HOME=$tmp_home
echo &quot;Your HOME is now $HOME&quot;
</code></pre></noscript></div>
</p>

<p>Now each time you <code>cd</code> to your working directory, it&rsquo;ll change your pointer to <code>.vagrant.d</code> folder \o/</p>

<p>As always, feel free to comment/insult/troll!</p>
]]></content>
  </entry>
  
</feed>
